DROP DATABASE IF EXISTS Senior_Project;
CREATE DATABASE Senior_Project;

USE Senior_Project;

-- User_Data Table
DROP TABLE IF EXISTS User_Data;
CREATE TABLE User_Data (
    user_id          SERIAL PRIMARY KEY,  -- Auto-incrementing integer for user_id
    full_name        VARCHAR(150) NOT NULL,
    email            VARCHAR(150) UNIQUE,
    username         VARCHAR(100) NOT NULL UNIQUE,
    password         VARCHAR(205),
    date_created     TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- Category Table
DROP TABLE IF EXISTS Category;
CREATE TABLE Category (
    category_id      VARCHAR(150) UNIQUE PRIMARY KEY,
    category_name    VARCHAR(350)
);

-- Products Table
DROP TABLE IF EXISTS Products;
CREATE TABLE Products (
    product_id       VARCHAR(100) NOT NULL PRIMARY KEY UNIQUE,
    product_name     VARCHAR(900) NOT NULL,
    category_id      VARCHAR(150),
    link             VARCHAR(599) NOT NULL,
    rating           FLOAT NOT NULL,
    total_reviews    INT NOT NULL,
    price            VARCHAR(100) NOT NULL,
    
    CONSTRAINT products_fk_category FOREIGN KEY(category_id)
    REFERENCES Category(category_id)
);

-- Sentiments Table
DROP TABLE IF EXISTS Sentiments;
CREATE TABLE Sentiments (
    sentiment_id     INT PRIMARY KEY,  -- Keep as INT for manual control or specific generation
    sentiment        VARCHAR(300) NOT NULL 
);

-- Reviews Table
DROP TABLE IF EXISTS Reviews;
CREATE TABLE Reviews (
    user_id          SERIAL NULL,  -- Auto-incrementing integer for user_id, now nullable
    product_id       VARCHAR(100) NOT NULL,
    review_id        VARCHAR(100) NOT NULL PRIMARY KEY UNIQUE,
    rating           FLOAT NOT NULL,
    review_text      VARCHAR(3000),
    sentiment_id     INT,  -- Should match the INT type in Sentiments
    
    CONSTRAINT reviews_fk_users FOREIGN KEY(user_id)
    REFERENCES User_Data(user_id),
   
    CONSTRAINT reviews_fk_products FOREIGN KEY(product_id)
    REFERENCES Products(product_id),
    
    CONSTRAINT reviews_fk_sentiments FOREIGN KEY(sentiment_id)
    REFERENCES Sentiments(sentiment_id)
);

-- Sample Queries
SELECT * FROM Category;
SELECT * FROM Reviews;
SELECT * FROM Products;
SELECT * FROM User_Data;
SELECT * FROM Sentiments;
